Index: src/main/java/com/horaoen/build/abstract_factory/button/Button.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/button/Button.java b/src/main/java/com/horaoen/build/abstract_factory/button/Button.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/button/Button.java	
+++ /dev/null	
@@ -1,5 +0,0 @@
-package com.horaoen.build.abstract_factory.button;
-
-public interface Button {
-    void paint();
-}
\ No newline at end of file
Index: src/main/java/com/horaoen/build/abstract_factory/checkbox/MacOSCheckbox.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/checkbox/MacOSCheckbox.java b/src/main/java/com/horaoen/build/abstract_factory/checkbox/MacOSCheckbox.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/checkbox/MacOSCheckbox.java	
+++ /dev/null	
@@ -1,12 +0,0 @@
-package com.horaoen.build.abstract_factory.checkbox;
-
-/**
- * @author horaoen
- */
-public class MacOSCheckbox implements Checkbox {
-
-    @Override
-    public void paint() {
-        System.out.println("You have created MacOSCheckbox.");
-    }
-}
\ No newline at end of file
Index: src/main/java/com/horaoen/build/abstract_factory/factories/WindowsFactory.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/factories/WindowsFactory.java b/src/main/java/com/horaoen/build/abstract_factory/factories/WindowsFactory.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/factories/WindowsFactory.java	
+++ /dev/null	
@@ -1,24 +0,0 @@
-package com.horaoen.build.abstract_factory.factories;
-
-import com.horaoen.build.abstract_factory.button.Button;
-import com.horaoen.build.abstract_factory.button.WindowsButton;
-import com.horaoen.build.abstract_factory.checkbox.Checkbox;
-import com.horaoen.build.abstract_factory.checkbox.WindowsCheckbox;
-
-/**
- * @author horaoen
- * Each concrete factory extends basic factory and responsible for creating
- * products of a single variety.
- */
-public class WindowsFactory implements GUIFactory {
-
-    @Override
-    public Button createButton() {
-        return new WindowsButton();
-    }
-
-    @Override
-    public Checkbox createCheckbox() {
-        return new WindowsCheckbox();
-    }
-}
\ No newline at end of file
Index: src/test/java/com/horaoen/build/abstract_factory/AbstractFactoryTest.java
===================================================================
diff --git a/src/test/java/com/horaoen/build/abstract_factory/AbstractFactoryTest.java b/src/test/java/com/horaoen/build/abstract_factory/AbstractFactoryTest.java
deleted file mode 100644
--- a/src/test/java/com/horaoen/build/abstract_factory/AbstractFactoryTest.java	
+++ /dev/null	
@@ -1,30 +0,0 @@
-package com.horaoen.build.abstract_factory;
-
-import com.horaoen.build.abstract_factory.factories.GUIFactory;
-import com.horaoen.build.abstract_factory.factories.MacOSFactory;
-import com.horaoen.build.abstract_factory.factories.WindowsFactory;
-import org.junit.Test;
-
-/**
- * @author horaoen
- * Application picks the factory type and creates it in run time (usually at
- * initialization stage), depending on the configuration or environment
- * variables.
- */
-public class AbstractFactoryTest {
-    @Test
-    public void basicTest() {
-        Application app;
-        GUIFactory factory;
-        String osName = System.getProperty("os.name").toLowerCase();
-        if (osName.contains("mac")) {
-            factory = new MacOSFactory();
-        } else {
-            factory = new WindowsFactory();
-        }
-        app = new Application(factory);
-        
-        app.paint();
-    }
-    
-}
Index: src/main/java/com/horaoen/build/abstract_factory/button/WindowsButton.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/button/WindowsButton.java b/src/main/java/com/horaoen/build/abstract_factory/button/WindowsButton.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/button/WindowsButton.java	
+++ /dev/null	
@@ -1,12 +0,0 @@
-package com.horaoen.build.abstract_factory.button;
-
-/**
- * @author horaoen
- */
-public class WindowsButton implements Button {
-
-    @Override
-    public void paint() {
-        System.out.println("You have created WindowsButton.");
-    }
-}
\ No newline at end of file
Index: src/main/java/com/horaoen/build/abstract_factory/checkbox/Checkbox.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/checkbox/Checkbox.java b/src/main/java/com/horaoen/build/abstract_factory/checkbox/Checkbox.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/checkbox/Checkbox.java	
+++ /dev/null	
@@ -1,8 +0,0 @@
-package com.horaoen.build.abstract_factory.checkbox;
-
-/**
- * @author horaoen
- */
-public interface Checkbox {
-    void paint();
-}
\ No newline at end of file
Index: src/main/java/com/horaoen/build/abstract_factory/checkbox/WindowsCheckbox.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/checkbox/WindowsCheckbox.java b/src/main/java/com/horaoen/build/abstract_factory/checkbox/WindowsCheckbox.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/checkbox/WindowsCheckbox.java	
+++ /dev/null	
@@ -1,12 +0,0 @@
-package com.horaoen.build.abstract_factory.checkbox;
-
-/**
- * @author horaoen
- */
-public class WindowsCheckbox implements Checkbox {
-
-    @Override
-    public void paint() {
-        System.out.println("You have created WindowsCheckbox.");
-    }
-}
\ No newline at end of file
Index: src/main/java/com/horaoen/build/abstract_factory/factories/GUIFactory.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/factories/GUIFactory.java b/src/main/java/com/horaoen/build/abstract_factory/factories/GUIFactory.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/factories/GUIFactory.java	
+++ /dev/null	
@@ -1,14 +0,0 @@
-package com.horaoen.build.abstract_factory.factories;
-
-import com.horaoen.build.abstract_factory.button.Button;
-import com.horaoen.build.abstract_factory.checkbox.Checkbox;
-
-/**
- * @author horaoen
- * Abstract factory knows about all (abstract) product types.
- */
-@SuppressWarnings("all")
-public interface GUIFactory {
-    Button createButton();
-    Checkbox createCheckbox();
-}
\ No newline at end of file
Index: src/main/java/com/horaoen/build/abstract_factory/Application.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/Application.java b/src/main/java/com/horaoen/build/abstract_factory/Application.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/Application.java	
+++ /dev/null	
@@ -1,25 +0,0 @@
-package com.horaoen.build.abstract_factory;
-
-import com.horaoen.build.abstract_factory.button.Button;
-import com.horaoen.build.abstract_factory.checkbox.Checkbox;
-import com.horaoen.build.abstract_factory.factories.GUIFactory;
-
-/**
- * @author horaoen
- * Factory users don't care which concrete factory they use since they work with
- * factories and products through abstract interfaces.
- */
-public class Application {
-    private Button button;
-    private Checkbox checkbox;
-    
-    public Application(GUIFactory factory) {
-        button = factory.createButton();
-        checkbox = factory.createCheckbox();
-    }
-    
-    public void paint() {
-        button.paint();
-        checkbox.paint();
-    }
-}
Index: src/main/java/com/horaoen/build/abstract_factory/factories/MacOSFactory.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/factories/MacOSFactory.java b/src/main/java/com/horaoen/build/abstract_factory/factories/MacOSFactory.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/factories/MacOSFactory.java	
+++ /dev/null	
@@ -1,25 +0,0 @@
-package com.horaoen.build.abstract_factory.factories;
-
-import com.horaoen.build.abstract_factory.button.Button;
-import com.horaoen.build.abstract_factory.button.MacOSButton;
-import com.horaoen.build.abstract_factory.checkbox.Checkbox;
-import com.horaoen.build.abstract_factory.checkbox.MacOSCheckbox;
-
-/**
- * @author horaoen
- * Each concrete factory extends basic factory and responsible for creating
- * products of a single variety.
- */
-@SuppressWarnings("all")
-public class MacOSFactory implements GUIFactory {
-
-    @Override
-    public Button createButton() {
-        return new MacOSButton();
-    }
-
-    @Override
-    public Checkbox createCheckbox() {
-        return new MacOSCheckbox();
-    }
-}
\ No newline at end of file
Index: src/main/java/com/horaoen/build/abstract_factory/button/MacOSButton.java
===================================================================
diff --git a/src/main/java/com/horaoen/build/abstract_factory/button/MacOSButton.java b/src/main/java/com/horaoen/build/abstract_factory/button/MacOSButton.java
deleted file mode 100644
--- a/src/main/java/com/horaoen/build/abstract_factory/button/MacOSButton.java	
+++ /dev/null	
@@ -1,13 +0,0 @@
-package com.horaoen.build.abstract_factory.button;
-
-
-/**
- * @author horaoen
- */
-public class MacOSButton implements Button {
-
-    @Override
-    public void paint() {
-        System.out.println("You have created MacOSButton.");
-    }
-}
\ No newline at end of file
